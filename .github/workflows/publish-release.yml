name: 自动部署新版本到服务器
on:
 push:
   tags:
     - v*.*.*

jobs: 
  publish-release:
    runs-on: ubuntu-latest
    steps:
      # checkout 代码
      - uses: actions/checkout@v2
      # 创建 .env 文件，写入相关信息
      # > 代表重写，>> 代表继续添加
      - name: create env file
        run: | 
          touch .env
          echo ALC_ACCESS_KEY=${{secrets.ALC_ACCESS_KEY}} >> .env
          echo ALC_ACCESS_SECRET=${{secrets.ALC_ACCESS_SECRET}} >> .env  
          echo accessKeyId=${{ secrets.ALC_ACCESS_KEY }} >> .env
          echo accessKeySecret=${{ secrets.ALC_ACCESS_SECRET }} >> .env
          echo clientID=${{ secrets.GITEE_CID }} >> .env
          echo clientSecret=${{ secrets.GITEE_SECRET }} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
          echo MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} >> .env
          echo MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo PING_ENV=${{ secrets.PING_ENV }} >> .env
      # 使用阿里云完成 docker login 登录，登录到ACR
      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-shenzhen.aliyuncs.com
          region-id: cn-shenzhen
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      # 使用正确的github tag 对应 acr tag 进行 docker build
      # github 打tag的步骤
      # 1. git add .
      # 2. git commit -m 'xxxxx'
      # 3. git tag -a v0.0.3 -m 'version 0.0.3' 
      # 4. git push --tags 这里和git push 是两回事
      # 5. git push
      - name: Build image for ACR docker
        run: docker build --tag "registry.cn-shenzhen.aliyuncs.com/winsonye/usermanagement:${{github.ref_name}}" .
      # 推送镜像到 ACR
      - name: Push image to ACR  
        run: docker push registry.cn-shenzhen.aliyuncs.com/winsonye/usermanagement:${{github.ref_name}}      
      # 查找和替换
      - name: Find and replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
         find: "{{tag}}"
         replace: "${{github.ref_name}}"
         include: "docker-compose-online.yml" 
      - run: cat docker-compose-online.yml
      # 拷贝必须文件到一个文件夹，包括 .env, docker-compose-online.yml, mongo-entrypoint
      - name: 'copy necessary files in to one folder'
        run: |
         mkdir user-management
         cp .env docker-compose-online.yml user-management
         cp -r mongo-entrypoint user-management 
         ls -a user-management
      # 通过 scp 拷贝必须文件到服务器 target: '~' 
      - name: 'copy user-management folder via scp'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: 'user-management'
          target: '~'
      # 通过ssh登陆重启docker服务
      - name: executing ssh and restart docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script_stop: true
          # 登陆阿里云的acr   
          # 停止docker服务
          # 重新启动docker服务
          # 清理工作
          script: | 
            docker login --username=${{secrets.ACR_USERNAME}} --password=${{secrets.ACR_PASSWORD}} registry.cn-shenzhen.aliyuncs.com
            cd ~/user-management/
            docker-compose -f docker-compose-online.yml down
            docker-compose -f docker-compose-online.yml up -d
            rm -rf .env 
            docker logout registry.cn-shenzhen.aliyuncs.com